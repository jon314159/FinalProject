version: "3.9"

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastapi_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Keep this only if it does NOT run app inserts. See safe script below.
      - ./init-db.sh:/docker-entrypoint-initdb.d/00-init-db.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fastapi_db"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - app-network

  migrate:
    build: .
    working_dir: /app
    command: alembic upgrade head
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://postgres:postgres@db:5432/fastapi_db
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    restart: "no"
    networks:
      - app-network

  web:
    build: .
    working_dir: /app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONPATH: /app
      DATABASE_URL: postgresql://postgres:postgres@db:5432/fastapi_db
      # Avoid setting TEST_DATABASE_URL here to prevent accidental use
      JWT_SECRET_KEY: "super-secret-key-for-jwt-min-32-chars"
      JWT_REFRESH_SECRET_KEY: "super-refresh-secret-key-min-32-chars"
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7
      BCRYPT_ROUNDS: 12
    volumes:
      - .:/app
    depends_on:
      migrate:
        condition: service_completed_successfully
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  postgres_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge
